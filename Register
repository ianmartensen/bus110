def register():
    with conn:
        cur = conn.cursor()
        try:
            empID = input("To register a new employee, first enter his or her EmployeeID: ")
            stripEmpID = empID.strip()
            while not len(stripEmpID) == 4 and stripEmpID.isdigit():
                stripEmpID = ("EmployeeID cannot be blank. PLease provide a 4 digit EmployeeID: ")

            with conn:

                try:
                    cur.execute("SELECT EmployeeID FROM Employee WHERE(EmployeeID ='" + stripEmpID + "')")
                    checkEmpID = cur.fetchone()
                    while checkEmpID:
                        EmpID = input("That EmployeeID is already in use. Please enter a different EmployeeID: ")
                        stripEmpID = EmpID.strip()
                        cur.execute("SELECT EmployeeID FROM Employee WHERE(EmployeeID = '" + stripEmpID + "')")
                        checkEmpID = cur.fetchone()
                    print("EmployeeID, " + stripEmpID + ", is accepted")
                    firstName     = input("\n What is your first name? ")
                    lastName      = input("What is your last name? ")
                    streetAddress = input("What is your street address? ")
                    city          = input("What city do you live in? ")
                    state         = input("What state do you live in? ")
                    zipCode       = input("What is your zipcode? ")
                    email         = input("What is your email? ")
                    password      = input("What is your password? ")

                    cur.execute('''INSERT INTO Employee VALUES(?,?,?,?,?,?,?,?,?)''', (stripEmpID, firstName, lastName, streetAddress, city, state, zipCode, email, password))
                    conn.commit()

                except:
                    print("Connection Failed")
        except:
            print("Connection Failed")

if __name__ == "__main__":
    inp = input("Are you a registered user? ")
    if "y" in inp:
        login()
    else:
        register()
